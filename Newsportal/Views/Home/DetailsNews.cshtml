@model Newsportal.Models.News


@{
    ViewData["Title"] = @Model.Title;
    Layout = "_Layout";
}
@{
    var cls = @Model.UserLikes ? "btn btn-primary" : "btn btn-secondary";
}
<div class="container mt-5">
    <div class="row">
        <div class="col-lg-8">
            <!-- Post content-->
            <article>
                <!-- Post header-->
                <header class="mb-4">
                    <!-- Post title-->
                    <h1 class="fw-bolder mb-1">@Model.Title</h1>
                    <div class="d-flex justify-content-end "><p class="border border-info bg-danger text-white">Read Counts: @Model.Count</p></div>
                    <!-- Post meta content-->
                    <div class="text-muted fst-italic mb-2">Posted on @Model.PublishedDate.Month/@Model.PublishedDate.Day @Model.PublishedDate.Hour:@Model.PublishedDate.Minute by @Model.Reporter.FirstName @Model.Reporter.LastName</div>
                    <!-- Post categories-->
                    <a class="badge bg-info text-white text-decoration-none link-light" href="#">@Model.Category.CategoryName</a>
                </header>
                <!-- Preview image figure-->
                @if (@Model.Image != null)
                {
                    <figure class="mb-4"><img class="img-fluid rounded" src="@Model.Image" alt="..."></figure>
                }

                <!-- Post content-->
                <section class="mb-5">
                    @Html.Raw(Model.Content)
                </section>
                <!--End -->
                <!--Likes and rating section-->
                <div class="d-flex justify-content-around mb-3">
                    <!--Likes section-->
                    <p class="my-3">
                        <p id="totalLikes">@Model.TotalLikes</p> <button class="@cls" onclick="likeNews()" id="likeButton">Likes</button>
                    </p>
                    <!--Rating section-->
                    <p class=" my-3">
                        <p id="totalRating">@Model.Rating</p> Rating
                    </p>
                </div>
                <!--End-->

                
            </article>
            <!-- Comments section-->
            <section class="mb-5">
                <div class="card bg-light">
                    <div class="card-body">
                        <!-- Comment form-->
                        <form class="mb-4" id="topLevelCommentCreateForm">
                            <textarea id="Content" class="form-control" rows="3" placeholder="Join the discussion and leave a comment!"></textarea>
                            <button type="submit" class="btn btn-primary mt-2">Comment</button>
                        </form>
                        @foreach (var comment in Model.Comments.ToList())
                        {
                            ListComment(comment);
                        }
                    </div>
                </div>
            </section>
        </div>
        <!-- Side widgets-->
        <div class="col-lg-4">
            <!-- Search widget-->
            <div class="card mb-4">
                <div class="card-header">Search</div>
                <div class="card-body">
                    <div class="input-group">
                        <input class="form-control" type="text" placeholder="Enter search term..." aria-label="Enter search term..." aria-describedby="button-search">
                        <button class="btn btn-primary" id="button-search" type="button">Go!</button>
                    </div>
                </div>
            </div>
            <!-- Categories widget-->
            <div class="card mb-4">
                <div class="card-header">Categories</div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-6">
                            <ul class="list-unstyled mb-0">
                                <li><a href="#">National</a></li>
                                <li><a href="#">International</a></li>
                                <li><a href="#">Politics</a></li>
                            </ul>
                        </div>
                        <div class="col-sm-6">
                            <ul class="list-unstyled mb-0">
                                <li><a href="#">Fashon</a></li>
                                <li><a href="#">Economy</a></li>
                                <li><a href="#">Sports</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Side widget-->
            <div class="card mb-4">
                <div class="card-header">Side Widget</div>
                <div class="card-body">You can put anything you want inside of these side widgets. They are easy to use, and feature the Bootstrap 5 card component!</div>
            </div>
        </div>
    </div>
</div>

@functions
{
    //DFS algorithm
    public void ListComment(Comment comment, bool nest = false, int width = 0)
    {
        var margin = $"{width}%";
        if (nest)
        {
            <!-- Child comment 1-->
            <div class="d-flex mt-4 pl-1" style="margin-left: @margin; border-left-style: dashed">
                <div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..."></div>
                <div class="ms-3">
                    <div class="fw-bold">@comment.CommentedBy.FirstName @comment.CommentedBy.FirstName</div>
                    <p>HERE SHOULD BE THE COMMENT REPLY: @comment.Content</p>
                    <p>On: @comment.CommentedOn</p>
                    <p onclick="showCommentForm(this, @comment.CommentId)" class="replyComment bg-light">Reply</p>
                </div>
            </div>
            
        }
        else
        {
            <div class="d-flex mb-4">
                <!-- Parent comment-->
                <div class="flex-shrink-0"><img class="rounded-circle" src="https://dummyimage.com/50x50/ced4da/6c757d.jpg" alt="..."></div>
                <div class="ms-3">
                    <div class="fw-bold">@comment.CommentedBy.FirstName @comment.CommentedBy.LastName</div>
                    <p>HERE SHOULD BE THE ACTUAL COMMENT: @comment.Content</p>
                    <p>On: @comment.CommentedOn</p>
                    <p onclick="showCommentForm(this, @comment.CommentId)" class="replyComment bg-light">Reply</p>
                </div>
            </div>

        }
        @foreach (var reply in comment.Replies.ToList())
        {
            ListComment(reply, true, width + 5);
        }

    }
}

<div>

    <a asp-action="Index">Back to List</a>
</div>

@section Scripts
{
    <script type="text/javascript">
        function likeNews() {
            let likesElement = $("#totalLikes");
            let totalLikes = parseInt(likesElement.text());
            console.log(totalLikes);
            const newsId = @Model.Id;
            
            const url = '@Url.Action("LikeNews", "News")' + '?newsId=' + newsId;
            console.log(url);
            $.ajax({
                url: url,
                contentType: 'application/html; charset=utf-8',
                type: 'POST',
                beforeSend: function () {
                },
                success: function (result) {
                    console.log(result);
                    likesElement.text(result?.totalLikes)
                    if (result.isLiked === true){
                        $("#likeButton").attr("class", "btn btn-primary");    
                    }else {
                        $("#likeButton").attr("class", "btn btn-secondary");
                    }                   
                    
                },
                error: function (errorResponse) {
                    console.log(errorResponse)
                }
            });
            
        }        
        
        function showCommentForm(element, commentId = null){
            
            let form = document.getElementById("commentReplyForm");
            
            if (form === null){
                let _div = document.createElement('div');
                _div.id = "replyFormEnclosingDiv";
                _div.innerHTML = `
                    <form class="replyForm mb-4" id="commentReplyForm">
                        <textarea class="form-control" rows="3" placeholder="Join the discussion and leave a comment!"></textarea>
                        <button type="button" class="commentButton btn btn-primary mt-2">Comment</button>
                    </form>
                `;
                let parentNode = element.parentNode;
                parentNode.appendChild(_div);
                createComment(commentId);
            }else {
                let parentElement = element.parentNode;      
                let replyForm = document.getElementById("replyFormEnclosingDiv");
                try {
                    parentElement.removeChild(replyForm);                           
                }catch (e){
                    parentElement = replyForm.parentNode;
                    parentElement.removeChild(replyForm);
                    showCommentForm(element);
                }
            }
            
        }
        
        $("#topLevelCommentCreateForm").submit((e) =>{
            e.preventDefault();
            
            const data = new FormData(e.target);
            console.log(data);
            const value = Object.fromEntries(data.entries());
            console.log(value);       
                
        });
        
        const createComment = commentId => {
            $("#commentReplyForm").submit((e) =>{
                e.preventDefault();
                
                const data = new FormData(e.target);
                console.log(data);
                const value = Object.fromEntries(data.entries());
                value.CommentId = commentId;
                console.log(value);       
                    
            });
        }
        
        
        
    </script>

}
